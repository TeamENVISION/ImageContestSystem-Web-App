@model ImageContestSystem.Web.Models.InputModels.CreateContestInputModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Contest</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, style = "width: 280px; height:90px;" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VotesCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VotesCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VotesCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WinnersCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WinnersCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WinnersCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ParticipationStrategy, "Participation Strtegy", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.SelectParticipationStrategy, new SelectList(Model.ParticipationStrategy),
                    new
                    {
                        @class = "form-control"
                    })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeadlineStrategy, "Deadline Strategy", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.SelectDeadlineStrategy, new SelectList(Model.DeadlineStrategy),
                    new
                    {
                        @class = "form-control"
                    })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VotingStrategy, "Voting Strtegy", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.SelectVotingStrategy, new SelectList(Model.VotingStrategy),
                    new
                    {
                        @class = "form-control"
                    })
            </div>
        </div>

        <div class="form-group" id="partChoice">
            @Html.LabelFor(model => model.Users, "Participants", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.ListBoxFor(m => m.SelectedParticipants,
                    new MultiSelectList(Model.Users, "Id", "UserName"),
                    new
                    {
                        @class = "chosen-select",
                        data_placeholder = "Choose Participants...",
                        style = "width:280px; height: 30px;"
                    })
            </div>
        </div>

        <div class="form-group" id="voterChoice">
            @Html.LabelFor(model => model.Users, "Voters", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.ListBoxFor(m => m.SelectedVoters,
                    new MultiSelectList(Model.Users, "Id", "UserName"),
                    new
                    {
                        @class = "chosen-select",
                        data_placeholder = "Choose Voters...",
                        style = "width:280px; height: 30px;"
                    })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {

    @Scripts.Render("~/bundles/bootstrap-datetimepicker")
    @Scripts.Render("~/bundles/jqueryval")
    <link href="/Content/chosen.css" rel="stylesheet" type="text/css">
    <script src="@Url.Content("~/Scripts/chosen.jquery.js")" type="text/javascript"></script>
    <script type="text/javascript">
        var config = {
            '.chosen-select': {},
            '.chosen-select-deselect': { allow_single_deselect: true },
            '.chosen-select-no-single': { disable_search_threshold: 2 },
            '.chosen-select-no-results': { no_results_text: 'Oops, nothing found!' },
            '.chosen-select-width': { width: "95%" }
        }
        for (var selector in config) {
            $(selector).chosen(config[selector]);
        } 

        $('#partChoice').hide();
        
        $('#SelectParticipationStrategy').change(function () {
            if ($(this).val() == 'Open') {
                $('#partChoice').hide();
            }
            else {
               
                $('#partChoice').show();
            }

        });
        $('#voterChoice').hide();
        $('#SelectVotingStrategy').change(function () {
            if ($(this).val() == 'Open') {
                $('#voterChoice').hide();
            }
            else {
                $('#voterChoice').show();
            }

        });

        $(function () {
            $('#StartDate').datetimepicker({
                format: 'DD-MMM-YYYY',
                sideBySide: true,
                showTodayButton: true,
                showClose: true,
                showClear: true,
                toolbarPlacement: 'bottom'
            });

        });

        $(function () {
            $('#EndDate').datetimepicker(
            {
                format: 'DD-MMM-YYYY',
                sideBySide: true,
                showTodayButton: true,
                showClose: true,
                showClear: true,
                toolbarPlacement: 'bottom'
            });
            return false;
        });
    </script>
}

@section styles{
    @Styles.Render("~/Content/bootstrap/datetimepicker")
}